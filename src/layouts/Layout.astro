---
// src/layouts/Layout.astro
export interface Props {
    title: string;
    description?: string;
    image?: string;
    type?: 'website' | 'article';
}

const {
    title,
    description = "Software Engineer & Creator passionate about building scalable web applications and elegant user experiences.",
    image = "/og-image.jpg",
    type = "website"
} = Astro.props;

const canonicalURL = new URL(Astro.url.pathname, Astro.site);
---

<!DOCTYPE html>
<html lang="en" data-theme="dark">
<head>
    <meta charset="UTF-8" />
    <meta name="description" content={description} />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <link rel="canonical" href={canonicalURL} />

    <!-- Primary Meta Tags -->
    <title>{title}</title>
    <meta name="title" content={title} />
    <meta name="description" content={description} />

    <!-- Open Graph / Facebook -->
    <meta property="og:type" content={type} />
    <meta property="og:url" content={Astro.url} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={new URL(image, Astro.url)} />

    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={Astro.url} />
    <meta property="twitter:title" content={title} />
    <meta property="twitter:description" content={description} />
    <meta property="twitter:image" content={new URL(image, Astro.url)} />

    <!-- Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700;800&display=swap" rel="stylesheet">
</head>
<body>
<slot />

<style is:global>
    /* CSS Variables */
    :root {
        /* Colors - Primary Palette */
        --color-primary: #68c6f3;
        --color-primary-dark: #d946ef;
        --color-primary-light: #f0abfc;

        /* Colors - Accent */
        --color-accent-blue: #3b82f6;
        --color-accent-green: #10b981;
        --color-accent-orange: #f59e0b;
        --color-accent-purple: #8b5cf6;

        /* Colors - Neutral Palette */
        --color-neutral-900: #0f172a;
        --color-neutral-800: #1e293b;
        --color-neutral-700: #334155;
        --color-neutral-600: #475569;
        --color-neutral-500: #64748b;
        --color-neutral-400: #94a3b8;
        --color-neutral-300: #cbd5e1;
        --color-neutral-200: #e2e8f0;
        --color-neutral-100: #f1f5f9;
        --color-neutral-50: #f8fafc;

        /* Typography */
        --font-sans: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
        --font-mono: 'JetBrains Mono', 'Fira Code', Consolas, monospace;

        /* Spacing */
        --space-1: 0.25rem;
        --space-2: 0.5rem;
        --space-3: 0.75rem;
        --space-4: 1rem;
        --space-5: 1.25rem;
        --space-6: 1.5rem;
        --space-8: 2rem;
        --space-10: 2.5rem;
        --space-12: 3rem;
        --space-16: 4rem;
        --space-20: 5rem;

        /* Shadows */
        --shadow-sm: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
        --shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);
        --shadow-md: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
        --shadow-lg: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);

        /* Border Radius */
        --radius-sm: 0.125rem;
        --radius: 0.25rem;
        --radius-md: 0.375rem;
        --radius-lg: 0.5rem;
        --radius-xl: 0.75rem;
        --radius-2xl: 1rem;
        --radius-full: 9999px;

        /* Transitions */
        --transition-fast: 150ms ease;
        --transition: 300ms ease;
    }

    /* Dark Mode Variables */
    [data-theme="dark"] {
        --color-bg: var(--color-neutral-900);
        --color-bg-secondary: var(--color-neutral-800);
        --color-bg-tertiary: var(--color-neutral-700);
        --color-text: var(--color-neutral-100);
        --color-text-secondary: var(--color-neutral-400);
        --color-border: var(--color-neutral-700);
    }

    /* Light Mode Variables */
    [data-theme="light"] {
        --color-bg: #ffffff;
        --color-bg-secondary: var(--color-neutral-50);
        --color-bg-tertiary: var(--color-neutral-100);
        --color-text: var(--color-neutral-900);
        --color-text-secondary: var(--color-neutral-600);
        --color-border: var(--color-neutral-200);
    }

    /* Base Styles */
    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
    }

    html {
        scroll-behavior: smooth;
    }

    body {
        font-family: var(--font-sans);
        background: var(--color-bg);
        color: var(--color-text);
        line-height: 1.6;
        transition: background-color var(--transition), color var(--transition);
    }

    /* Animations */
    .fade-in {
        opacity: 0;
        transform: translateY(20px);
        animation: fadeIn 0.6s ease forwards;
    }

    .fade-in-delay-1 { animation-delay: 0.1s; }
    .fade-in-delay-2 { animation-delay: 0.2s; }
    .fade-in-delay-3 { animation-delay: 0.3s; }

    @keyframes fadeIn {
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    @keyframes pulse {
        0%, 100% { opacity: 1; }
        50% { opacity: 0.5; }
    }
</style>

<script>
    // Theme Toggle Functionality
    function toggleTheme() {
        const body = document.documentElement;
        const currentTheme = body.getAttribute('data-theme');

        if (currentTheme === 'dark') {
            body.setAttribute('data-theme', 'light');
            localStorage.setItem('theme', 'light');
        } else {
            body.setAttribute('data-theme', 'dark');
            localStorage.setItem('theme', 'dark');
        }
    }

    // Set initial theme
    const savedTheme = localStorage.getItem('theme') || 'dark';
    document.documentElement.setAttribute('data-theme', savedTheme);

    // Make toggleTheme available globally with proper typing
    if (typeof window !== 'undefined') {
        window.toggleTheme = toggleTheme;
    }
</script>
</body>
</html>